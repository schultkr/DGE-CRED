%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

tic0 = tic;
% Save empty dates and dseries objects in memory.
dates('initialize');
dseries('initialize');
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'DGE_CRED_Model';
M_.dynare_version = '4.5.7';
oo_.dynare_version = '4.5.7';
options_.dynare_version = '4.5.7';
%
% Some global variables initialization
%
global_initialization;
diary off;
diary('DGE_CRED_Model.log');
M_.exo_names = 'exo_P';
M_.exo_names_tex = '{\eta_{P}}';
M_.exo_names_long = 'exogeneous price index evolution';
M_.exo_names = char(M_.exo_names, 'exo_PoP');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{PoP}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogeneous population');
M_.exo_names = char(M_.exo_names, 'exo_SL');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{SL}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogeneous sea level');
M_.exo_names = char(M_.exo_names, 'exo_NX');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{NX}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous net exports');
M_.exo_names = char(M_.exo_names, 'exo_BG');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{BG}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous structural balance');
M_.exo_names = char(M_.exo_names, 'exo_1_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_1_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_1_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_1_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_1_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_1_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_1_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_1_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_2_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_2_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_2_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_2_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_2_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_2_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_2_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_2_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_3_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_3_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_3_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_3_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_3_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A,k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus TFP');
M_.exo_names = char(M_.exo_names, 'exo_N_3_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{N},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous labour specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_K_3_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{A^{K},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous capital specific TFP');
M_.exo_names = char(M_.exo_names, 'exo_GA_3_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{G^{A},k,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenous sector adaptation expenditure');
M_.exo_names = char(M_.exo_names, 'exo_T_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{T,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional temperature');
M_.exo_names = char(M_.exo_names, 'exo_PERC_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{PERC,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional percipitation');
M_.exo_names = char(M_.exo_names, 'exo_WS_1');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{W^{S},n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional wind speed');
M_.exo_names = char(M_.exo_names, 'exo_T_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{T,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional temperature');
M_.exo_names = char(M_.exo_names, 'exo_PERC_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{PERC,n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional percipitation');
M_.exo_names = char(M_.exo_names, 'exo_WS_2');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta_{W^{S},n}}');
M_.exo_names_long = char(M_.exo_names_long, 'exogenus regional wind speed');
M_.endo_names = 'P';
M_.endo_names_tex = 'P';
M_.endo_names_long = 'price level';
M_.endo_names = char(M_.endo_names, 'K');
M_.endo_names_tex = char(M_.endo_names_tex, 'K');
M_.endo_names_long = char(M_.endo_names_long, 'capital stock');
M_.endo_names = char(M_.endo_names, 'C');
M_.endo_names_tex = char(M_.endo_names_tex, 'C');
M_.endo_names_long = char(M_.endo_names_long, 'consumption');
M_.endo_names = char(M_.endo_names, 'PoP');
M_.endo_names_tex = char(M_.endo_names_tex, 'PoP');
M_.endo_names_long = char(M_.endo_names_long, 'population');
M_.endo_names = char(M_.endo_names, 'B');
M_.endo_names_tex = char(M_.endo_names_tex, 'B');
M_.endo_names_long = char(M_.endo_names_long, 'international traded bonds');
M_.endo_names = char(M_.endo_names, 'Sf');
M_.endo_names_tex = char(M_.endo_names_tex, 'S^{f}');
M_.endo_names_long = char(M_.endo_names_long, 'effective exchange rate with the rest of the world');
M_.endo_names = char(M_.endo_names, 'BG');
M_.endo_names_tex = char(M_.endo_names_tex, 'BG');
M_.endo_names_long = char(M_.endo_names_long, 'government debt');
M_.endo_names = char(M_.endo_names, 'NX');
M_.endo_names_tex = char(M_.endo_names_tex, 'NX');
M_.endo_names_long = char(M_.endo_names_long, 'net exports');
M_.endo_names = char(M_.endo_names, 'rf');
M_.endo_names_tex = char(M_.endo_names_tex, '{r^{f}}');
M_.endo_names_long = char(M_.endo_names_long, 'foreign interest rate');
M_.endo_names = char(M_.endo_names, 'G');
M_.endo_names_tex = char(M_.endo_names_tex, 'G');
M_.endo_names_long = char(M_.endo_names_long, 'government expenditure');
M_.endo_names = char(M_.endo_names, 'I');
M_.endo_names_tex = char(M_.endo_names_tex, 'I');
M_.endo_names_long = char(M_.endo_names_long, 'private investment');
M_.endo_names = char(M_.endo_names, 'Y');
M_.endo_names_tex = char(M_.endo_names_tex, 'Y');
M_.endo_names_long = char(M_.endo_names_long, 'GDP');
M_.endo_names = char(M_.endo_names, 'N');
M_.endo_names_tex = char(M_.endo_names_tex, 'N');
M_.endo_names_long = char(M_.endo_names_long, 'labour');
M_.endo_names = char(M_.endo_names, 'SL');
M_.endo_names_tex = char(M_.endo_names_tex, '{SL}');
M_.endo_names_long = char(M_.endo_names_long, 'sea level');
M_.endo_names = char(M_.endo_names, 'PERC_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{PERC_{r}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional percipitation');
M_.endo_names = char(M_.endo_names, 'T_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{T_{r}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional temperature');
M_.endo_names = char(M_.endo_names, 'WS_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{r}^{S}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional wind speed');
M_.endo_names = char(M_.endo_names, 'PERC_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{PERC_{r}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional percipitation');
M_.endo_names = char(M_.endo_names, 'T_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{T_{r}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional temperature');
M_.endo_names = char(M_.endo_names, 'WS_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{r}^{S}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional wind speed');
M_.endo_names = char(M_.endo_names, 'Y_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector GDP');
M_.endo_names = char(M_.endo_names, 'K_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector capital');
M_.endo_names = char(M_.endo_names, 'N_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector employment');
M_.endo_names = char(M_.endo_names, 'I_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector private investment');
M_.endo_names = char(M_.endo_names, 'P_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector price index');
M_.endo_names = char(M_.endo_names, 'W_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector wage index');
M_.endo_names = char(M_.endo_names, 'Y_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_1_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_names = char(M_.endo_names, 'Y_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_1_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_names = char(M_.endo_names, 'Y_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector GDP');
M_.endo_names = char(M_.endo_names, 'K_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector capital');
M_.endo_names = char(M_.endo_names, 'N_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector employment');
M_.endo_names = char(M_.endo_names, 'I_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector private investment');
M_.endo_names = char(M_.endo_names, 'P_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector price index');
M_.endo_names = char(M_.endo_names, 'W_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector wage index');
M_.endo_names = char(M_.endo_names, 'Y_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_2_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_names = char(M_.endo_names, 'Y_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_2_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_names = char(M_.endo_names, 'Y_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector GDP');
M_.endo_names = char(M_.endo_names, 'K_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector capital');
M_.endo_names = char(M_.endo_names, 'N_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector employment');
M_.endo_names = char(M_.endo_names, 'I_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector private investment');
M_.endo_names = char(M_.endo_names, 'P_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector price index');
M_.endo_names = char(M_.endo_names, 'W_3');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_k}');
M_.endo_names_long = char(M_.endo_names_long, 'sector wage index');
M_.endo_names = char(M_.endo_names, 'Y_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_3_1');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_names = char(M_.endo_names, 'Y_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{Y_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector GDP');
M_.endo_names = char(M_.endo_names, 'D_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{D_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector damages');
M_.endo_names = char(M_.endo_names, 'K_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{K_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital');
M_.endo_names = char(M_.endo_names, 'N_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{N_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector employment');
M_.endo_names = char(M_.endo_names, 'W_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{W_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector wages');
M_.endo_names = char(M_.endo_names, 'A_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector TFP');
M_.endo_names = char(M_.endo_names, 'G_A_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{G^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector adaptation government expenditure');
M_.endo_names = char(M_.endo_names, 'gA_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{g^{A}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional growth rate of sector TFP');
M_.endo_names = char(M_.endo_names, 'A_N_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{N}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector labour specific TFP');
M_.endo_names = char(M_.endo_names, 'A_K_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{A^{K}_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector capital specific TFP');
M_.endo_names = char(M_.endo_names, 'I_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector private investment');
M_.endo_names = char(M_.endo_names, 'P_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{P_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector price index');
M_.endo_names = char(M_.endo_names, 'omegaI_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{\omega^I_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'shadow value of regional private sector investment');
M_.endo_names = char(M_.endo_names, 'r_3_2');
M_.endo_names_tex = char(M_.endo_names_tex, '{r_{k,n}}');
M_.endo_names_long = char(M_.endo_names_long, 'regional sector rental rate on capital');
M_.endo_partitions = struct();
M_.param_names = 'omega_1_p';
M_.param_names_tex = '{\omega_{k}}';
M_.param_names_long = 'sector capital share';
M_.param_names = char(M_.param_names, 'etaC_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{C}}');
M_.param_names_long = char(M_.param_names_long, 'intratemporal elasticity of substitution');
M_.param_names = char(M_.param_names, 'rhoA_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_1_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'rhoA_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_1_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'omega_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'etaC_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{C}}');
M_.param_names_long = char(M_.param_names_long, 'intratemporal elasticity of substitution');
M_.param_names = char(M_.param_names, 'rhoA_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_2_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'rhoA_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_2_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'omega_3_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'etaC_3_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{C}}');
M_.param_names_long = char(M_.param_names_long, 'intratemporal elasticity of substitution');
M_.param_names = char(M_.param_names, 'rhoA_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_3_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'rhoA_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_N_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence labour specific productivity shock');
M_.param_names = char(M_.param_names, 'rhoA_K_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'persistence capital specific productivity shock');
M_.param_names = char(M_.param_names, 'phiY_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0} \, Y_{k,n,0}}{P_{0} \, Y_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral output');
M_.param_names = char(M_.param_names, 'phiN_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{N_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiW_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{W_{k,n,0} \, N_{k,n,0}}{P_{k,n,0} \, Y_{k,n,0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiP_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '\frac{P_{k,n,0}}{P_{0}}');
M_.param_names_long = char(M_.param_names_long, 'share of regional and sectoral employment');
M_.param_names = char(M_.param_names, 'phiL_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{L}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of disutility to work');
M_.param_names = char(M_.param_names, 'omega_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital share');
M_.param_names = char(M_.param_names, 'alphaK_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter capital share');
M_.param_names = char(M_.param_names, 'alphaN_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'distribution parameter labour share');
M_.param_names = char(M_.param_names, 'etaNK_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{N,K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'elasticity of substitution between labour and capital');
M_.param_names = char(M_.param_names, 'A_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector long-run TFP');
M_.param_names = char(M_.param_names, 'GAT_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{G^{A}_{T,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector region specific government expenditure for adaptation');
M_.param_names = char(M_.param_names, 'phiGA_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{G^{A}}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of effectiveness of government expenditure on adaptation measures in a specific region and sector');
M_.param_names = char(M_.param_names, 'gY0_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{Y_{2,k,n}}{Y_{1,k,n}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector growth');
M_.param_names = char(M_.param_names, 'gN0_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\frac{N_{2,k,n}{N_{2}}}}{\frac{N_{1,k,n}}{N_{1}}}');
M_.param_names_long = char(M_.param_names_long, 'initial sector labour growth');
M_.param_names = char(M_.param_names, 'omegaA_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{A}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent for productivity growth');
M_.param_names = char(M_.param_names, 'A_N_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{N}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector labour specific TFP');
M_.param_names = char(M_.param_names, 'A_K_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{A^{K}_{k,n}}');
M_.param_names_long = char(M_.param_names_long, 'sector capital specific TFP');
M_.param_names = char(M_.param_names, 'a_T_1_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_2_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function temperature');
M_.param_names = char(M_.param_names, 'a_T_3_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function temperature');
M_.param_names = char(M_.param_names, 'a_P_1_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_2_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_P_3_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function percipitation');
M_.param_names = char(M_.param_names, 'a_W_1_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_2_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_W_3_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function wind speed');
M_.param_names = char(M_.param_names, 'a_SL_1_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{1,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'intercept of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_2_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{2,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'slope of damage function sea level');
M_.param_names = char(M_.param_names, 'a_SL_3_3_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{a_{3,k,n}}');
M_.param_names_long = char(M_.param_names_long, 'exponent of damage function sea level');
M_.param_names = char(M_.param_names, 'beta_p');
M_.param_names_tex = char(M_.param_names_tex, '{\beta}');
M_.param_names_long = char(M_.param_names_long, 'discount factor');
M_.param_names = char(M_.param_names, 'delta_p');
M_.param_names_tex = char(M_.param_names_tex, '{\delta}');
M_.param_names_long = char(M_.param_names_long, 'capital depreciation rate');
M_.param_names = char(M_.param_names, 'sigmaL_p');
M_.param_names_tex = char(M_.param_names_tex, '{\sigma^{L}}');
M_.param_names_long = char(M_.param_names_long, 'inverse Frisch elasticity');
M_.param_names = char(M_.param_names, 'sigmaC_p');
M_.param_names_tex = char(M_.param_names_tex, '{\sigma^{C}}');
M_.param_names_long = char(M_.param_names_long, 'intertemporal elasticity of substitution');
M_.param_names = char(M_.param_names, 'etaC_p');
M_.param_names_tex = char(M_.param_names_tex, '{\eta^{C}}');
M_.param_names_long = char(M_.param_names_long, 'intratemporal elasticity of substitution');
M_.param_names = char(M_.param_names, 'phiB_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{B}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of foreign adjustment cost');
M_.param_names = char(M_.param_names, 'phiK_p');
M_.param_names_tex = char(M_.param_names_tex, '{\phi^{K}}');
M_.param_names_long = char(M_.param_names_long, 'coefficient of investment adjustment cost');
M_.param_names = char(M_.param_names, 'tauC_p');
M_.param_names_tex = char(M_.param_names_tex, '{\tau^{C}}');
M_.param_names_long = char(M_.param_names_long, 'consumption tax');
M_.param_names = char(M_.param_names, 'tauN_p');
M_.param_names_tex = char(M_.param_names_tex, '{\tau^{N}}');
M_.param_names_long = char(M_.param_names_long, 'labour tax');
M_.param_names = char(M_.param_names, 'tauK_p');
M_.param_names_tex = char(M_.param_names_tex, '{\tau^{K}}');
M_.param_names_long = char(M_.param_names_long, 'capital tax');
M_.param_names = char(M_.param_names, 'omegaNX_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{NX}}');
M_.param_names_long = char(M_.param_names_long, 'share of net exports relative to domestic GDP');
M_.param_names = char(M_.param_names, 'omegaNX0_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{NX,0}}');
M_.param_names_long = char(M_.param_names_long, 'initial share of net exports relative to domestic GDP');
M_.param_names = char(M_.param_names, 'omegaNXT_p');
M_.param_names_tex = char(M_.param_names_tex, '{\omega^{NX,T}}');
M_.param_names_long = char(M_.param_names_long, 'terminal share of net exports relative to domestic GDP');
M_.param_names = char(M_.param_names, 'rhoNX_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{NX}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in net exports');
M_.param_names = char(M_.param_names, 'rhoA_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{A}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in TFP');
M_.param_names = char(M_.param_names, 'rhoPoP_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{PoP}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in population');
M_.param_names = char(M_.param_names, 'rhoSL_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{SL}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in sea level');
M_.param_names = char(M_.param_names, 'rhoT_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{T}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in temperature');
M_.param_names = char(M_.param_names, 'rhoWS_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{T}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in wind speed');
M_.param_names = char(M_.param_names, 'rhoPERC_p');
M_.param_names_tex = char(M_.param_names_tex, '{\rho^{T}}');
M_.param_names_long = char(M_.param_names_long, 'persistency in percipitation');
M_.param_names = char(M_.param_names, 'inbsectors_p');
M_.param_names_tex = char(M_.param_names_tex, '{K}');
M_.param_names_long = char(M_.param_names_long, 'number of sectors');
M_.param_names = char(M_.param_names, 'inbregions_p');
M_.param_names_tex = char(M_.param_names_tex, '{R}');
M_.param_names_long = char(M_.param_names_long, 'number of regions');
M_.param_names = char(M_.param_names, 'lCalibration_p');
M_.param_names_tex = char(M_.param_names_tex, '{l^{Calib}}');
M_.param_names_long = char(M_.param_names_long, 'logical indiactor whether model is calibrated or not');
M_.param_names = char(M_.param_names, 'T0_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{T_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initial regional temperature');
M_.param_names = char(M_.param_names, 'PERC0_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{PERC_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initial regional percipitation');
M_.param_names = char(M_.param_names, 'WS0_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{W^{S}_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initiial regional wind speed');
M_.param_names = char(M_.param_names, 'TT_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{T_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional temperature');
M_.param_names = char(M_.param_names, 'PERCT_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{PERC_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional percipitation');
M_.param_names = char(M_.param_names, 'WST_1_p');
M_.param_names_tex = char(M_.param_names_tex, '{W^{S}_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional wind speed');
M_.param_names = char(M_.param_names, 'T0_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{T_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initial regional temperature');
M_.param_names = char(M_.param_names, 'PERC0_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{PERC_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initial regional percipitation');
M_.param_names = char(M_.param_names, 'WS0_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{W^{S}_{0,n}}');
M_.param_names_long = char(M_.param_names_long, 'initiial regional wind speed');
M_.param_names = char(M_.param_names, 'TT_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{T_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional temperature');
M_.param_names = char(M_.param_names, 'PERCT_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{PERC_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional percipitation');
M_.param_names = char(M_.param_names, 'WST_2_p');
M_.param_names_tex = char(M_.param_names_tex, '{W^{S}_{T,n}}');
M_.param_names_long = char(M_.param_names_long, 'terminal regional wind speed');
M_.param_names = char(M_.param_names, 'SL0_p');
M_.param_names_tex = char(M_.param_names_tex, '{SL_0}');
M_.param_names_long = char(M_.param_names_long, 'initial sea level');
M_.param_names = char(M_.param_names, 'PoP0_p');
M_.param_names_tex = char(M_.param_names_tex, '{POP_0}');
M_.param_names_long = char(M_.param_names_long, 'initial population');
M_.param_names = char(M_.param_names, 'Y0_p');
M_.param_names_tex = char(M_.param_names_tex, '{Y_0}');
M_.param_names_long = char(M_.param_names_long, 'initial output');
M_.param_names = char(M_.param_names, 'P0_p');
M_.param_names_tex = char(M_.param_names_tex, '{P_0}');
M_.param_names_long = char(M_.param_names_long, 'initial price level');
M_.param_names = char(M_.param_names, 'N0_p');
M_.param_names_tex = char(M_.param_names_tex, '{Y_0}');
M_.param_names_long = char(M_.param_names_long, 'initial employment');
M_.param_names = char(M_.param_names, 'SLT_p');
M_.param_names_tex = char(M_.param_names_tex, '{SL_0}');
M_.param_names_long = char(M_.param_names_long, 'terminal sea level');
M_.param_names = char(M_.param_names, 'PoPT_p');
M_.param_names_tex = char(M_.param_names_tex, '{PoP_0}');
M_.param_names_long = char(M_.param_names_long, 'terminal population');
M_.param_names = char(M_.param_names, 'YT_p');
M_.param_names_tex = char(M_.param_names_tex, '{Y_0}');
M_.param_names_long = char(M_.param_names_long, 'terminal output');
M_.param_names = char(M_.param_names, 'NT_p');
M_.param_names_tex = char(M_.param_names_tex, '{Y_0}');
M_.param_names_long = char(M_.param_names_long, 'terminal employment');
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 35;
M_.endo_nbr = 122;
M_.param_nbr = 242;
M_.orig_endo_nbr = 122;
M_.aux_vars = [];
M_.Sigma_e = zeros(35, 35);
M_.Correlation_matrix = eye(35, 35);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = 1;
M_.det_shocks = [];
options_.block=0;
options_.bytecode=0;
options_.use_dll=0;
M_.hessian_eq_zero = 1;
erase_compiled_function('DGE_CRED_Model_static');
erase_compiled_function('DGE_CRED_Model_dynamic');
M_.orig_eq_nbr = 122;
M_.eq_nbr = 122;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./' M_.fname '_set_auxiliary_variables.m'], 'file') == 2;
M_.lead_lag_incidence = [
 0 45 167;
 0 46 0;
 0 47 168;
 1 48 169;
 2 49 0;
 0 50 170;
 3 51 0;
 4 52 0;
 0 53 171;
 0 54 0;
 0 55 0;
 0 56 172;
 0 57 0;
 5 58 0;
 6 59 0;
 7 60 0;
 8 61 0;
 9 62 0;
 10 63 0;
 11 64 0;
 0 65 0;
 12 66 0;
 0 67 0;
 0 68 0;
 0 69 0;
 0 70 0;
 0 71 0;
 0 72 0;
 13 73 0;
 0 74 0;
 0 75 0;
 14 76 0;
 0 77 0;
 0 78 0;
 15 79 0;
 16 80 0;
 17 81 173;
 0 82 174;
 0 83 175;
 0 84 176;
 0 85 0;
 0 86 0;
 18 87 0;
 0 88 0;
 0 89 0;
 19 90 0;
 0 91 0;
 0 92 0;
 20 93 0;
 21 94 0;
 22 95 177;
 0 96 178;
 0 97 179;
 0 98 180;
 0 99 0;
 23 100 0;
 0 101 0;
 0 102 0;
 0 103 0;
 0 104 0;
 0 105 0;
 0 106 0;
 24 107 0;
 0 108 0;
 0 109 0;
 25 110 0;
 0 111 0;
 0 112 0;
 26 113 0;
 27 114 0;
 28 115 181;
 0 116 182;
 0 117 183;
 0 118 184;
 0 119 0;
 0 120 0;
 29 121 0;
 0 122 0;
 0 123 0;
 30 124 0;
 0 125 0;
 0 126 0;
 31 127 0;
 32 128 0;
 33 129 185;
 0 130 186;
 0 131 187;
 0 132 188;
 0 133 0;
 34 134 0;
 0 135 0;
 0 136 0;
 0 137 0;
 0 138 0;
 0 139 0;
 0 140 0;
 35 141 0;
 0 142 0;
 0 143 0;
 36 144 0;
 0 145 0;
 0 146 0;
 37 147 0;
 38 148 0;
 39 149 189;
 0 150 190;
 0 151 191;
 0 152 192;
 0 153 0;
 0 154 0;
 40 155 0;
 0 156 0;
 0 157 0;
 41 158 0;
 0 159 0;
 0 160 0;
 42 161 0;
 43 162 0;
 44 163 193;
 0 164 194;
 0 165 195;
 0 166 196;]';
M_.nstatic = 55;
M_.nfwrd   = 23;
M_.npred   = 37;
M_.nboth   = 7;
M_.nsfwrd   = 30;
M_.nspred   = 44;
M_.ndynamic   = 67;
M_.equations_tags = {
  1 , 'name' , 'sector specific TFP growth rate' ;
  2 , 'name' , 'sector specific TFP' ;
  3 , 'name' , 'sector and capital specific productivity shock' ;
  4 , 'name' , 'sector and labour specific productivity shock' ;
  5 , 'name' , 'sector specific damage function' ;
  6 , 'name' , 'sector specific adaptation expenditures by the government' ;
  7 , 'name' , 'demand for regional sector output' ;
  7 , 'mcp' , 'Y_1_1 > 0' ;
  8 , 'name' , 'sector specific output' ;
  9 , 'name' , 'Firms FOC capital' ;
  9 , 'mcp' , 'K_1_1 > 0' ;
  10 , 'name' , 'Firms FOC labour' ;
  10 , 'mcp' , 'N_1_1 > 0' ;
  11 , 'name' , 'HH FOC labour' ;
  11 , 'mcp' , 'N_1_1>0' ;
  12 , 'name' , 'HH FOC capital' ;
  12 , 'mcp' , 'K_1_1>0' ;
  13 , 'name' , 'HH FOC investment' ;
  13 , 'mcp' , 'I_1_1 > 0' ;
  14 , 'name' , 'LOM capital' ;
  14 , 'mcp' , 'I_1_1 > 0' ;
  15 , 'name' , 'sector specific TFP growth rate' ;
  16 , 'name' , 'sector specific TFP' ;
  17 , 'name' , 'sector and capital specific productivity shock' ;
  18 , 'name' , 'sector and labour specific productivity shock' ;
  19 , 'name' , 'sector specific damage function' ;
  20 , 'name' , 'sector specific adaptation expenditures by the government' ;
  21 , 'name' , 'demand for regional sector output' ;
  21 , 'mcp' , 'Y_1_2 > 0' ;
  22 , 'name' , 'sector specific output' ;
  23 , 'name' , 'Firms FOC capital' ;
  23 , 'mcp' , 'K_1_2 > 0' ;
  24 , 'name' , 'Firms FOC labour' ;
  24 , 'mcp' , 'N_1_2 > 0' ;
  25 , 'name' , 'HH FOC labour' ;
  25 , 'mcp' , 'N_1_2>0' ;
  26 , 'name' , 'HH FOC capital' ;
  26 , 'mcp' , 'K_1_2>0' ;
  27 , 'name' , 'HH FOC investment' ;
  27 , 'mcp' , 'I_1_2 > 0' ;
  28 , 'name' , 'LOM capital' ;
  28 , 'mcp' , 'I_1_2 > 0' ;
  29 , 'name' , 'demand for sector output' ;
  30 , 'name' , 'sector aggregate specific output' ;
  31 , 'name' , 'aggergate sector labour' ;
  32 , 'name' , 'aggergate sector labour' ;
  33 , 'name' , 'aggregate sector investment' ;
  34 , 'name' , 'aggregate capital' ;
  35 , 'name' , 'sector specific TFP growth rate' ;
  36 , 'name' , 'sector specific TFP' ;
  37 , 'name' , 'sector and capital specific productivity shock' ;
  38 , 'name' , 'sector and labour specific productivity shock' ;
  39 , 'name' , 'sector specific damage function' ;
  40 , 'name' , 'sector specific adaptation expenditures by the government' ;
  41 , 'name' , 'demand for regional sector output' ;
  41 , 'mcp' , 'Y_2_1 > 0' ;
  42 , 'name' , 'sector specific output' ;
  43 , 'name' , 'Firms FOC capital' ;
  43 , 'mcp' , 'K_2_1 > 0' ;
  44 , 'name' , 'Firms FOC labour' ;
  44 , 'mcp' , 'N_2_1 > 0' ;
  45 , 'name' , 'HH FOC labour' ;
  45 , 'mcp' , 'N_2_1>0' ;
  46 , 'name' , 'HH FOC capital' ;
  46 , 'mcp' , 'K_2_1>0' ;
  47 , 'name' , 'HH FOC investment' ;
  47 , 'mcp' , 'I_2_1 > 0' ;
  48 , 'name' , 'LOM capital' ;
  48 , 'mcp' , 'I_2_1 > 0' ;
  49 , 'name' , 'sector specific TFP growth rate' ;
  50 , 'name' , 'sector specific TFP' ;
  51 , 'name' , 'sector and capital specific productivity shock' ;
  52 , 'name' , 'sector and labour specific productivity shock' ;
  53 , 'name' , 'sector specific damage function' ;
  54 , 'name' , 'sector specific adaptation expenditures by the government' ;
  55 , 'name' , 'demand for regional sector output' ;
  55 , 'mcp' , 'Y_2_2 > 0' ;
  56 , 'name' , 'sector specific output' ;
  57 , 'name' , 'Firms FOC capital' ;
  57 , 'mcp' , 'K_2_2 > 0' ;
  58 , 'name' , 'Firms FOC labour' ;
  58 , 'mcp' , 'N_2_2 > 0' ;
  59 , 'name' , 'HH FOC labour' ;
  59 , 'mcp' , 'N_2_2>0' ;
  60 , 'name' , 'HH FOC capital' ;
  60 , 'mcp' , 'K_2_2>0' ;
  61 , 'name' , 'HH FOC investment' ;
  61 , 'mcp' , 'I_2_2 > 0' ;
  62 , 'name' , 'LOM capital' ;
  62 , 'mcp' , 'I_2_2 > 0' ;
  63 , 'name' , 'demand for sector output' ;
  64 , 'name' , 'sector aggregate specific output' ;
  65 , 'name' , 'aggergate sector labour' ;
  66 , 'name' , 'aggergate sector labour' ;
  67 , 'name' , 'aggregate sector investment' ;
  68 , 'name' , 'aggregate capital' ;
  69 , 'name' , 'sector specific TFP growth rate' ;
  70 , 'name' , 'sector specific TFP' ;
  71 , 'name' , 'sector and capital specific productivity shock' ;
  72 , 'name' , 'sector and labour specific productivity shock' ;
  73 , 'name' , 'sector specific damage function' ;
  74 , 'name' , 'sector specific adaptation expenditures by the government' ;
  75 , 'name' , 'demand for regional sector output' ;
  75 , 'mcp' , 'Y_3_1 > 0' ;
  76 , 'name' , 'sector specific output' ;
  77 , 'name' , 'Firms FOC capital' ;
  77 , 'mcp' , 'K_3_1 > 0' ;
  78 , 'name' , 'Firms FOC labour' ;
  78 , 'mcp' , 'N_3_1 > 0' ;
  79 , 'name' , 'HH FOC labour' ;
  79 , 'mcp' , 'N_3_1>0' ;
  80 , 'name' , 'HH FOC capital' ;
  80 , 'mcp' , 'K_3_1>0' ;
  81 , 'name' , 'HH FOC investment' ;
  81 , 'mcp' , 'I_3_1 > 0' ;
  82 , 'name' , 'LOM capital' ;
  82 , 'mcp' , 'I_3_1 > 0' ;
  83 , 'name' , 'sector specific TFP growth rate' ;
  84 , 'name' , 'sector specific TFP' ;
  85 , 'name' , 'sector and capital specific productivity shock' ;
  86 , 'name' , 'sector and labour specific productivity shock' ;
  87 , 'name' , 'sector specific damage function' ;
  88 , 'name' , 'sector specific adaptation expenditures by the government' ;
  89 , 'name' , 'demand for regional sector output' ;
  89 , 'mcp' , 'Y_3_2 > 0' ;
  90 , 'name' , 'sector specific output' ;
  91 , 'name' , 'Firms FOC capital' ;
  91 , 'mcp' , 'K_3_2 > 0' ;
  92 , 'name' , 'Firms FOC labour' ;
  92 , 'mcp' , 'N_3_2 > 0' ;
  93 , 'name' , 'HH FOC labour' ;
  93 , 'mcp' , 'N_3_2>0' ;
  94 , 'name' , 'HH FOC capital' ;
  94 , 'mcp' , 'K_3_2>0' ;
  95 , 'name' , 'HH FOC investment' ;
  95 , 'mcp' , 'I_3_2 > 0' ;
  96 , 'name' , 'LOM capital' ;
  96 , 'mcp' , 'I_3_2 > 0' ;
  97 , 'name' , 'demand for sector output' ;
  98 , 'name' , 'sector aggregate specific output' ;
  99 , 'name' , 'aggergate sector labour' ;
  100 , 'name' , 'aggergate sector labour' ;
  101 , 'name' , 'aggregate sector investment' ;
  102 , 'name' , 'aggregate capital' ;
  103 , 'name' , 'Temperature' ;
  104 , 'name' , 'Wind speed' ;
  105 , 'name' , 'Percipitation' ;
  106 , 'name' , 'Temperature' ;
  107 , 'name' , 'Wind speed' ;
  108 , 'name' , 'Percipitation' ;
  109 , 'name' , 'Sea level' ;
  110 , 'name' , 'national price level' ;
  111 , 'name' , 'Population' ;
  112 , 'name' , 'aggregate gross value added' ;
  113 , 'name' , 'Resource Constraint' ;
  114 , 'name' , 'Net Exports' ;
  115 , 'name' , 'LOM Net Exports' ;
  116 , 'name' , 'World interest rate' ;
  117 , 'name' , 'Foreign Assets' ;
  118 , 'name' , 'Government Budget Constraint' ;
  119 , 'name' , 'Government Budget Constraint' ;
  120 , 'name' , 'aggregate investment' ;
  121 , 'name' , 'aggregate capital' ;
  122 , 'name' , 'aggregate labour' ;
};
M_.static_and_dynamic_models_differ = 0;
M_.exo_names_orig_ord = [1:35];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(122, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(35, 1);
M_.params = NaN(242, 1);
M_.NNZDerivatives = [642; 0; -1];
sWorkbookNameInput = ['ExcelFiles/Model Simulation and Calibration ' num2str(3) ' Sectors and ' num2str(2) ' Regions.xlsx'];
sWorkbookNameOutput = ['ExcelFiles/Results Scenarios ' num2str(3) ' Sectors and ' num2str(2) ' Regions.xlsx'];
addpath([pwd() '/Functions'])
if isoctave()
addpath([pwd() '/Functions/Octave'])
end
casClimateShocks = [arrayfun(@(x) ['exo_T_' num2str(x)], 1:2, 'UniformOutput', false),...
                    arrayfun(@(x) ['exo_PERC_' num2str(x)], 1:2, 'UniformOutput', false),...
                    arrayfun(@(x) ['exo_WS_' num2str(x)], 1:2, 'UniformOutput', false),...
                    ];
casWindSpeedShocks = arrayfun(@(x) ['exo_WS_' num2str(x)], 1:2, 'UniformOutput', false);
temp = arrayfun(@(y) arrayfun(@(x) ['exo_' num2str(y) '_' num2str(x)], 1:2, 'UniformOutput', false), 1:3, 'UniformOutput', false);
casProdShocks = [temp{:}];
temp = arrayfun(@(y) arrayfun(@(x) ['exo_N_' num2str(y) '_' num2str(x)], 1:2, 'UniformOutput', false), 1:3, 'UniformOutput', false);
casProdNShocks = [temp{:}];
temp = arrayfun(@(y) arrayfun(@(x) ['exo_K_' num2str(y) '_' num2str(x)], 1:2, 'UniformOutput', false), 1:3, 'UniformOutput', false);
casProdKShocks = [temp{:}];
casDemandShocks = arrayfun(@(y) ['exo_Y_' num2str(y)], 1:3, 'UniformOutput', false);
M_.params( 219 ) = 3;
inbsectors_p = M_.params( 219 );
M_.params( 220 ) = 2;
inbregions_p = M_.params( 220 );
M_.params( 203 ) = 9;
etaC_p = M_.params( 203 );
M_.params( 206 ) = 0.19;
tauC_p = M_.params( 206 );
M_.params( 207 ) = 0.2;
tauN_p = M_.params( 207 );
M_.params( 208 ) = 0.3;
tauK_p = M_.params( 208 );
M_.params( 199 ) = 0.95;
beta_p = M_.params( 199 );
M_.params( 200 ) = 0.05;
delta_p = M_.params( 200 );
M_.params( 201 ) = 0.25;
sigmaL_p = M_.params( 201 );
M_.params( 202 ) = 1;
sigmaC_p = M_.params( 202 );
M_.params( 213 ) = 0.9;
rhoA_p = M_.params( 213 );
M_.params( 210 ) = 0.03;
omegaNX0_p = M_.params( 210 );
M_.params( 209 ) = M_.params(210);
omegaNX_p = M_.params( 209 );
M_.params( 211 ) = 0.03;
omegaNXT_p = M_.params( 211 );
M_.params( 212 ) = 0.9;
rhoNX_p = M_.params( 212 );
M_.params( 215 ) = 0.9;
rhoSL_p = M_.params( 215 );
M_.params( 235 ) = 95;
PoP0_p = M_.params( 235 );
M_.params( 236 ) = 1;
Y0_p = M_.params( 236 );
M_.params( 238 ) = 0.5;
N0_p = M_.params( 238 );
M_.params( 242 ) = M_.params(238);
NT_p = M_.params( 242 );
M_.params( 237 ) = 1;
P0_p = M_.params( 237 );
M_.params( 240 ) = M_.params(235);
PoPT_p = M_.params( 240 );
M_.params( 241 ) = M_.params(236);
YT_p = M_.params( 241 );
M_.params( 214 ) = 0.9;
rhoPoP_p = M_.params( 214 );
M_.params( 216 ) = 0.9;
rhoT_p = M_.params( 216 );
M_.params( 217 ) = 0.9;
rhoWS_p = M_.params( 217 );
M_.params( 218 ) = 0.9;
rhoPERC_p = M_.params( 218 );
M_.params( 215 ) = 0.9;
rhoSL_p = M_.params( 215 );
M_.params( 204 ) = 10;
phiB_p = M_.params( 204 );
M_.params( 205 ) = 10;
phiK_p = M_.params( 205 );
M_.params( 234 ) = 0;
SL0_p = M_.params( 234 );
M_.params( 239 ) = 0;
SLT_p = M_.params( 239 );
M_.params( 222 ) = 0;
T0_1_p = M_.params( 222 );
M_.params( 225 ) = M_.params(222);
TT_1_p = M_.params( 225 );
M_.params( 223 ) = 0;
PERC0_1_p = M_.params( 223 );
M_.params( 226 ) = M_.params(223);
PERCT_1_p = M_.params( 226 );
M_.params( 224 ) = 0;
WS0_1_p = M_.params( 224 );
M_.params( 227 ) = M_.params(224);
WST_1_p = M_.params( 227 );
M_.params( 228 ) = 0;
T0_2_p = M_.params( 228 );
M_.params( 231 ) = M_.params(228);
TT_2_p = M_.params( 231 );
M_.params( 229 ) = 0;
PERC0_2_p = M_.params( 229 );
M_.params( 232 ) = M_.params(229);
PERCT_2_p = M_.params( 232 );
M_.params( 230 ) = 0;
WS0_2_p = M_.params( 230 );
M_.params( 233 ) = M_.params(230);
WST_2_p = M_.params( 233 );
aT_1_mat = [0.0, 0.0; 0.0 0.0];
aT_2_mat = [0.01,0.005;  0.00236, 0.00236];
aT_3_mat = [2, 2; 2 2];
aSL_1_mat = [7 0; 0 0];
aSL_2_mat = [0 0; 0 0];
aSL_3_mat = [2, 2; 2 2];
M_.params( 1 ) = 1/M_.params(219);
omega_1_p = M_.params( 1 );
M_.params( 2 ) = 2;
etaC_1_p = M_.params( 2 );
M_.params( 15 ) = 1;
A_1_1_p = M_.params( 15 );
M_.params( 20 ) = 0.025;
omegaA_1_1_p = M_.params( 20 );
M_.params( 18 ) = 1.06;
gY0_1_1_p = M_.params( 18 );
M_.params( 19 ) = 1.06;
gN0_1_1_p = M_.params( 19 );
M_.params( 21 ) = 1;
A_N_1_1_p = M_.params( 21 );
M_.params( 22 ) = 1;
A_K_1_1_p = M_.params( 22 );
M_.params( 3 ) = 0;
rhoA_1_1_p = M_.params( 3 );
M_.params( 4 ) = 0;
rhoA_N_1_1_p = M_.params( 4 );
M_.params( 5 ) = 0;
rhoA_K_1_1_p = M_.params( 5 );
M_.params( 8 ) = 0.5;
phiW_1_1_p = M_.params( 8 );
M_.params( 9 ) = 1;
phiP_1_1_p = M_.params( 9 );
M_.params( 16 ) = 0;
GAT_1_1_p = M_.params( 16 );
M_.params( 17 ) = 1;
phiGA_1_1_p = M_.params( 17 );
M_.params( 7 ) = 1/(M_.params(219)*M_.params(220));
phiN_1_1_p = M_.params( 7 );
M_.params( 6 ) = 1/(M_.params(219)*M_.params(220));
phiY_1_1_p = M_.params( 6 );
M_.params( 10 ) = 1;
phiL_1_1_p = M_.params( 10 );
M_.params( 12 ) = 0.5;
alphaK_1_1_p = M_.params( 12 );
M_.params( 13 ) = 0.5;
alphaN_1_1_p = M_.params( 13 );
M_.params( 11 ) = 1/M_.params(220);
omega_1_1_p = M_.params( 11 );
M_.params( 14 ) = 0.95;
etaNK_1_1_p = M_.params( 14 );
M_.params( 23 ) = 0;
a_T_1_1_1_p = M_.params( 23 );
M_.params( 24 ) = 0.00253;
a_T_2_1_1_p = M_.params( 24 );
M_.params( 25 ) = 2;
a_T_3_1_1_p = M_.params( 25 );
M_.params( 32 ) = 0;
a_SL_1_1_1_p = M_.params( 32 );
M_.params( 33 ) = 0;
a_SL_2_1_1_p = M_.params( 33 );
M_.params( 34 ) = 2;
a_SL_3_1_1_p = M_.params( 34 );
M_.params( 29 ) = 0;
a_W_1_1_1_p = M_.params( 29 );
M_.params( 30 ) = 0;
a_W_2_1_1_p = M_.params( 30 );
M_.params( 31 ) = 2;
a_W_3_1_1_p = M_.params( 31 );
M_.params( 26 ) = 0;
a_P_1_1_1_p = M_.params( 26 );
M_.params( 27 ) = 0;
a_P_2_1_1_p = M_.params( 27 );
M_.params( 28 ) = 2;
a_P_3_1_1_p = M_.params( 28 );
M_.params( 47 ) = 1;
A_1_2_p = M_.params( 47 );
M_.params( 52 ) = 0.025;
omegaA_1_2_p = M_.params( 52 );
M_.params( 50 ) = 1.06;
gY0_1_2_p = M_.params( 50 );
M_.params( 51 ) = 1.06;
gN0_1_2_p = M_.params( 51 );
M_.params( 53 ) = 1;
A_N_1_2_p = M_.params( 53 );
M_.params( 54 ) = 1;
A_K_1_2_p = M_.params( 54 );
M_.params( 35 ) = 0;
rhoA_1_2_p = M_.params( 35 );
M_.params( 36 ) = 0;
rhoA_N_1_2_p = M_.params( 36 );
M_.params( 37 ) = 0;
rhoA_K_1_2_p = M_.params( 37 );
M_.params( 40 ) = 0.5;
phiW_1_2_p = M_.params( 40 );
M_.params( 41 ) = 1;
phiP_1_2_p = M_.params( 41 );
M_.params( 48 ) = 0;
GAT_1_2_p = M_.params( 48 );
M_.params( 49 ) = 1;
phiGA_1_2_p = M_.params( 49 );
M_.params( 39 ) = 1/(M_.params(219)*M_.params(220));
phiN_1_2_p = M_.params( 39 );
M_.params( 38 ) = 1/(M_.params(219)*M_.params(220));
phiY_1_2_p = M_.params( 38 );
M_.params( 42 ) = 1;
phiL_1_2_p = M_.params( 42 );
M_.params( 44 ) = 0.5;
alphaK_1_2_p = M_.params( 44 );
M_.params( 45 ) = 0.5;
alphaN_1_2_p = M_.params( 45 );
M_.params( 43 ) = 1/M_.params(220);
omega_1_2_p = M_.params( 43 );
M_.params( 46 ) = 0.95;
etaNK_1_2_p = M_.params( 46 );
M_.params( 55 ) = 0;
a_T_1_1_2_p = M_.params( 55 );
M_.params( 56 ) = 0.00253;
a_T_2_1_2_p = M_.params( 56 );
M_.params( 57 ) = 2;
a_T_3_1_2_p = M_.params( 57 );
M_.params( 64 ) = 0;
a_SL_1_1_2_p = M_.params( 64 );
M_.params( 65 ) = 0;
a_SL_2_1_2_p = M_.params( 65 );
M_.params( 66 ) = 2;
a_SL_3_1_2_p = M_.params( 66 );
M_.params( 61 ) = 0;
a_W_1_1_2_p = M_.params( 61 );
M_.params( 62 ) = 0;
a_W_2_1_2_p = M_.params( 62 );
M_.params( 63 ) = 2;
a_W_3_1_2_p = M_.params( 63 );
M_.params( 58 ) = 0;
a_P_1_1_2_p = M_.params( 58 );
M_.params( 59 ) = 0;
a_P_2_1_2_p = M_.params( 59 );
M_.params( 60 ) = 2;
a_P_3_1_2_p = M_.params( 60 );
M_.params( 67 ) = 1/M_.params(219);
omega_2_p = M_.params( 67 );
M_.params( 68 ) = 2;
etaC_2_p = M_.params( 68 );
M_.params( 81 ) = 1;
A_2_1_p = M_.params( 81 );
M_.params( 86 ) = 0.025;
omegaA_2_1_p = M_.params( 86 );
M_.params( 84 ) = 1.06;
gY0_2_1_p = M_.params( 84 );
M_.params( 85 ) = 1.06;
gN0_2_1_p = M_.params( 85 );
M_.params( 87 ) = 1;
A_N_2_1_p = M_.params( 87 );
M_.params( 88 ) = 1;
A_K_2_1_p = M_.params( 88 );
M_.params( 69 ) = 0;
rhoA_2_1_p = M_.params( 69 );
M_.params( 70 ) = 0;
rhoA_N_2_1_p = M_.params( 70 );
M_.params( 71 ) = 0;
rhoA_K_2_1_p = M_.params( 71 );
M_.params( 74 ) = 0.5;
phiW_2_1_p = M_.params( 74 );
M_.params( 75 ) = 1;
phiP_2_1_p = M_.params( 75 );
M_.params( 82 ) = 0;
GAT_2_1_p = M_.params( 82 );
M_.params( 83 ) = 1;
phiGA_2_1_p = M_.params( 83 );
M_.params( 73 ) = 1/(M_.params(219)*M_.params(220));
phiN_2_1_p = M_.params( 73 );
M_.params( 72 ) = 1/(M_.params(219)*M_.params(220));
phiY_2_1_p = M_.params( 72 );
M_.params( 76 ) = 1;
phiL_2_1_p = M_.params( 76 );
M_.params( 78 ) = 0.5;
alphaK_2_1_p = M_.params( 78 );
M_.params( 79 ) = 0.5;
alphaN_2_1_p = M_.params( 79 );
M_.params( 77 ) = 1/M_.params(220);
omega_2_1_p = M_.params( 77 );
M_.params( 80 ) = 0.95;
etaNK_2_1_p = M_.params( 80 );
M_.params( 89 ) = 0;
a_T_1_2_1_p = M_.params( 89 );
M_.params( 90 ) = 0.00253;
a_T_2_2_1_p = M_.params( 90 );
M_.params( 91 ) = 2;
a_T_3_2_1_p = M_.params( 91 );
M_.params( 98 ) = 0;
a_SL_1_2_1_p = M_.params( 98 );
M_.params( 99 ) = 0;
a_SL_2_2_1_p = M_.params( 99 );
M_.params( 100 ) = 2;
a_SL_3_2_1_p = M_.params( 100 );
M_.params( 95 ) = 0;
a_W_1_2_1_p = M_.params( 95 );
M_.params( 96 ) = 0;
a_W_2_2_1_p = M_.params( 96 );
M_.params( 97 ) = 2;
a_W_3_2_1_p = M_.params( 97 );
M_.params( 92 ) = 0;
a_P_1_2_1_p = M_.params( 92 );
M_.params( 93 ) = 0;
a_P_2_2_1_p = M_.params( 93 );
M_.params( 94 ) = 2;
a_P_3_2_1_p = M_.params( 94 );
M_.params( 113 ) = 1;
A_2_2_p = M_.params( 113 );
M_.params( 118 ) = 0.025;
omegaA_2_2_p = M_.params( 118 );
M_.params( 116 ) = 1.06;
gY0_2_2_p = M_.params( 116 );
M_.params( 117 ) = 1.06;
gN0_2_2_p = M_.params( 117 );
M_.params( 119 ) = 1;
A_N_2_2_p = M_.params( 119 );
M_.params( 120 ) = 1;
A_K_2_2_p = M_.params( 120 );
M_.params( 101 ) = 0;
rhoA_2_2_p = M_.params( 101 );
M_.params( 102 ) = 0;
rhoA_N_2_2_p = M_.params( 102 );
M_.params( 103 ) = 0;
rhoA_K_2_2_p = M_.params( 103 );
M_.params( 106 ) = 0.5;
phiW_2_2_p = M_.params( 106 );
M_.params( 107 ) = 1;
phiP_2_2_p = M_.params( 107 );
M_.params( 114 ) = 0;
GAT_2_2_p = M_.params( 114 );
M_.params( 115 ) = 1;
phiGA_2_2_p = M_.params( 115 );
M_.params( 105 ) = 1/(M_.params(219)*M_.params(220));
phiN_2_2_p = M_.params( 105 );
M_.params( 104 ) = 1/(M_.params(219)*M_.params(220));
phiY_2_2_p = M_.params( 104 );
M_.params( 108 ) = 1;
phiL_2_2_p = M_.params( 108 );
M_.params( 110 ) = 0.5;
alphaK_2_2_p = M_.params( 110 );
M_.params( 111 ) = 0.5;
alphaN_2_2_p = M_.params( 111 );
M_.params( 109 ) = 1/M_.params(220);
omega_2_2_p = M_.params( 109 );
M_.params( 112 ) = 0.95;
etaNK_2_2_p = M_.params( 112 );
M_.params( 121 ) = 0;
a_T_1_2_2_p = M_.params( 121 );
M_.params( 122 ) = 0.00253;
a_T_2_2_2_p = M_.params( 122 );
M_.params( 123 ) = 2;
a_T_3_2_2_p = M_.params( 123 );
M_.params( 130 ) = 0;
a_SL_1_2_2_p = M_.params( 130 );
M_.params( 131 ) = 0;
a_SL_2_2_2_p = M_.params( 131 );
M_.params( 132 ) = 2;
a_SL_3_2_2_p = M_.params( 132 );
M_.params( 127 ) = 0;
a_W_1_2_2_p = M_.params( 127 );
M_.params( 128 ) = 0;
a_W_2_2_2_p = M_.params( 128 );
M_.params( 129 ) = 2;
a_W_3_2_2_p = M_.params( 129 );
M_.params( 124 ) = 0;
a_P_1_2_2_p = M_.params( 124 );
M_.params( 125 ) = 0;
a_P_2_2_2_p = M_.params( 125 );
M_.params( 126 ) = 2;
a_P_3_2_2_p = M_.params( 126 );
M_.params( 133 ) = 1/M_.params(219);
omega_3_p = M_.params( 133 );
M_.params( 134 ) = 2;
etaC_3_p = M_.params( 134 );
M_.params( 147 ) = 1;
A_3_1_p = M_.params( 147 );
M_.params( 152 ) = 0.025;
omegaA_3_1_p = M_.params( 152 );
M_.params( 150 ) = 1.06;
gY0_3_1_p = M_.params( 150 );
M_.params( 151 ) = 1.06;
gN0_3_1_p = M_.params( 151 );
M_.params( 153 ) = 1;
A_N_3_1_p = M_.params( 153 );
M_.params( 154 ) = 1;
A_K_3_1_p = M_.params( 154 );
M_.params( 135 ) = 0;
rhoA_3_1_p = M_.params( 135 );
M_.params( 136 ) = 0;
rhoA_N_3_1_p = M_.params( 136 );
M_.params( 137 ) = 0;
rhoA_K_3_1_p = M_.params( 137 );
M_.params( 140 ) = 0.5;
phiW_3_1_p = M_.params( 140 );
M_.params( 141 ) = 1;
phiP_3_1_p = M_.params( 141 );
M_.params( 148 ) = 0;
GAT_3_1_p = M_.params( 148 );
M_.params( 149 ) = 1;
phiGA_3_1_p = M_.params( 149 );
M_.params( 139 ) = 1/(M_.params(219)*M_.params(220));
phiN_3_1_p = M_.params( 139 );
M_.params( 138 ) = 1/(M_.params(219)*M_.params(220));
phiY_3_1_p = M_.params( 138 );
M_.params( 142 ) = 1;
phiL_3_1_p = M_.params( 142 );
M_.params( 144 ) = 0.5;
alphaK_3_1_p = M_.params( 144 );
M_.params( 145 ) = 0.5;
alphaN_3_1_p = M_.params( 145 );
M_.params( 143 ) = 1/M_.params(220);
omega_3_1_p = M_.params( 143 );
M_.params( 146 ) = 0.95;
etaNK_3_1_p = M_.params( 146 );
M_.params( 155 ) = 0;
a_T_1_3_1_p = M_.params( 155 );
M_.params( 156 ) = 0.00253;
a_T_2_3_1_p = M_.params( 156 );
M_.params( 157 ) = 2;
a_T_3_3_1_p = M_.params( 157 );
M_.params( 164 ) = 0;
a_SL_1_3_1_p = M_.params( 164 );
M_.params( 165 ) = 0;
a_SL_2_3_1_p = M_.params( 165 );
M_.params( 166 ) = 2;
a_SL_3_3_1_p = M_.params( 166 );
M_.params( 161 ) = 0;
a_W_1_3_1_p = M_.params( 161 );
M_.params( 162 ) = 0;
a_W_2_3_1_p = M_.params( 162 );
M_.params( 163 ) = 2;
a_W_3_3_1_p = M_.params( 163 );
M_.params( 158 ) = 0;
a_P_1_3_1_p = M_.params( 158 );
M_.params( 159 ) = 0;
a_P_2_3_1_p = M_.params( 159 );
M_.params( 160 ) = 2;
a_P_3_3_1_p = M_.params( 160 );
M_.params( 179 ) = 1;
A_3_2_p = M_.params( 179 );
M_.params( 184 ) = 0.025;
omegaA_3_2_p = M_.params( 184 );
M_.params( 182 ) = 1.06;
gY0_3_2_p = M_.params( 182 );
M_.params( 183 ) = 1.06;
gN0_3_2_p = M_.params( 183 );
M_.params( 185 ) = 1;
A_N_3_2_p = M_.params( 185 );
M_.params( 186 ) = 1;
A_K_3_2_p = M_.params( 186 );
M_.params( 167 ) = 0;
rhoA_3_2_p = M_.params( 167 );
M_.params( 168 ) = 0;
rhoA_N_3_2_p = M_.params( 168 );
M_.params( 169 ) = 0;
rhoA_K_3_2_p = M_.params( 169 );
M_.params( 172 ) = 0.5;
phiW_3_2_p = M_.params( 172 );
M_.params( 173 ) = 1;
phiP_3_2_p = M_.params( 173 );
M_.params( 180 ) = 0;
GAT_3_2_p = M_.params( 180 );
M_.params( 181 ) = 1;
phiGA_3_2_p = M_.params( 181 );
M_.params( 171 ) = 1/(M_.params(219)*M_.params(220));
phiN_3_2_p = M_.params( 171 );
M_.params( 170 ) = 1/(M_.params(219)*M_.params(220));
phiY_3_2_p = M_.params( 170 );
M_.params( 174 ) = 1;
phiL_3_2_p = M_.params( 174 );
M_.params( 176 ) = 0.5;
alphaK_3_2_p = M_.params( 176 );
M_.params( 177 ) = 0.5;
alphaN_3_2_p = M_.params( 177 );
M_.params( 175 ) = 1/M_.params(220);
omega_3_2_p = M_.params( 175 );
M_.params( 178 ) = 0.95;
etaNK_3_2_p = M_.params( 178 );
M_.params( 187 ) = 0;
a_T_1_3_2_p = M_.params( 187 );
M_.params( 188 ) = 0.00253;
a_T_2_3_2_p = M_.params( 188 );
M_.params( 189 ) = 2;
a_T_3_3_2_p = M_.params( 189 );
M_.params( 196 ) = 0;
a_SL_1_3_2_p = M_.params( 196 );
M_.params( 197 ) = 0;
a_SL_2_3_2_p = M_.params( 197 );
M_.params( 198 ) = 2;
a_SL_3_3_2_p = M_.params( 198 );
M_.params( 193 ) = 0;
a_W_1_3_2_p = M_.params( 193 );
M_.params( 194 ) = 0;
a_W_2_3_2_p = M_.params( 194 );
M_.params( 195 ) = 2;
a_W_3_3_2_p = M_.params( 195 );
M_.params( 190 ) = 0;
a_P_1_3_2_p = M_.params( 190 );
M_.params( 191 ) = 0;
a_P_2_3_2_p = M_.params( 191 );
M_.params( 192 ) = 2;
a_P_3_3_2_p = M_.params( 192 );
TempValues = readtable(sWorkbookNameInput, 'Sheet', 'Start');
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
TempValues = readtable(sWorkbookNameInput, 'Sheet', 'Dynamics');
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
TempValues = readtable(sWorkbookNameInput, 'Sheet', 'Structural Parameters');
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
TempValues = readtable(sWorkbookNameInput, 'Sheet', 'Climate Damage Functions');
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
for icoScenario = 1:size(casScenarioNames,2)
sScenario = char(casScenarioNames(icoScenario));
if isequal(sScenario, 'Baseline') 
oo_.steady_state = zeros(size(oo_.steady_state));
oo_.exo_steady_state = zeros(size(oo_.exo_steady_state));
%
% INITVAL instructions
%
options_.initval_file = 0;
oo_.exo_steady_state( 30 ) = 0;
oo_.exo_steady_state( 31 ) = 0;
oo_.exo_steady_state( 32 ) = 0;
oo_.exo_steady_state( 33 ) = 0;
oo_.exo_steady_state( 34 ) = 0;
oo_.exo_steady_state( 35 ) = 0;
oo_.exo_steady_state( 3 ) = 0;
oo_.exo_steady_state( 2 ) = 0;
oo_.exo_steady_state( 5 ) = 0;
oo_.exo_steady_state( 1 ) = 0;
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
M_.params( 221 ) = 1;
lCalibration_p = M_.params( 221 );
options_.qz_zero_threshold = 1e-6;
[oo_.steady_state, ~, oo_.exo_steady_state] = DGE_CRED_Model_steadystate(oo_.steady_state, oo_.exo_steady_state);
steady;
oo_.dr.eigval = check(M_,options_,oo_);
model_diagnostics(M_,options_,oo_);
temp = arrayfun(@(y) arrayfun(@(x) ['phiY_' num2str(y) '_' num2str(x) '_p'], 1:2, 'UniformOutput', false), 1:3, 'UniformOutput', false);
casShareParams = [temp{:}];
temp = arrayfun(@(y) arrayfun(@(x) ['phiN_' num2str(y) '_' num2str(x) '_p'], 1:2, 'UniformOutput', false), 1:3, 'UniformOutput', false);
casShareNParams = [temp{:}];
%
% ENDVAL instructions
%
ys0_= oo_.steady_state;
ex0_ = oo_.exo_steady_state;
oo_.exo_steady_state( 7 ) = 0;
oo_.exo_steady_state( 11 ) = 0;
M_.params( 221 ) = 2;
lCalibration_p = M_.params( 221 );
M_.params( 209 ) = M_.params(211);
omegaNX_p = M_.params( 209 );
TempValues = readtable(sWorkbookNameInput, 'Sheet', 'Terminal');
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
iaTerminalVars = M_.params(lParams);
[ys, ~, exo] = DGE_CRED_Model_steadystate(oo_.steady_state, oo_.exo_steady_state);
oo_.exo_steady_state = exo;
oo_.steady_state = ys;
steady;
else
sVersion = ['Sectors' num2str(inbsectors_p) 'Regions' num2str(inbregions_p)];
load('structScenarioResults.mat','structScenarioResults');
oo_ = structScenarioResults.(sVersion).Baseline.oo_;
M_ = structScenarioResults.(sVersion).Baseline.M_;
ys0_ = oo_.endo_simul(:,1);
end
if ~exist('sScenario', 'var')
sScenario = 'Baseline';
end
M_.params( 221 ) = 3;
lCalibration_p = M_.params( 221 );
TempValues = readtable(sWorkbookNameInput, 'Sheet', sScenario);
[lParams,iaMparams] = ismember(cellstr(M_.param_names), TempValues.Parameter);
M_.params(lParams) = TempValues.Value(iaMparams(iaMparams>0));
if ~isequal(sScenario, 'Baseline')
iaClimateVars = M_.params(lParams);
iStep = 10;
ys = ys0_;
for icoiter = 1:iStep
M_.params(lParams) = iaClimateVars * (icoiter/iStep);
exo = oo_.exo_steady_state * (icoiter/iStep).^(1/icoiter); 
[ys, ~, exo] = DGE_CRED_Model_steadystate(ys, exo);
end
oo_.exo_steady_state = exo;
oo_.steady_state = ys;
steady;
end
options_.periods = 1000;
perfect_foresight_setup;
iStep = 20;
imaxTermination_p = 110;
iminTermination_p = 110;
M_.params( 221 ) = 0;
lCalibration_p = M_.params( 221 );
temp = arrayfun(@(y) arrayfun(@(x) ['gY0_' num2str(y) '_' num2str(x) '_p'], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casInitGrowthValues = [temp{:}];
lSelectInitGrowthParams = ismember(cellstr(M_.param_names), casInitGrowthValues);
temp = arrayfun(@(y) arrayfun(@(x) ['gN0_' num2str(y) '_' num2str(x) '_p'], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casInitGrowthValuesN = [temp{:}];
lSelectInitGrowthParamsN = ismember(cellstr(M_.param_names), casInitGrowthValuesN);
temp = arrayfun(@(y) arrayfun(@(x) ['exo_' num2str(y) '_' num2str(x)], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casProdShocks = [temp{:}];
lSelectProdShocks = ismember(cellstr(M_.exo_names), casProdShocks);
temp = arrayfun(@(y) arrayfun(@(x) ['Y_' num2str(y) '_' num2str(x)], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casProdVars = [temp{:}];
lSelectProdVars = ismember(cellstr(M_.endo_names), casProdVars);
temp = arrayfun(@(y) arrayfun(@(x) ['exo_N_' num2str(y) '_' num2str(x)], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casProdNShocks = [temp{:}];
lSelectProdShocksN = ismember(cellstr(M_.exo_names), casProdNShocks);
temp = arrayfun(@(y) arrayfun(@(x) ['N_' num2str(y) '_' num2str(x)], 1:inbregions_p, 'UniformOutput', false), 1:inbsectors_p, 'UniformOutput', false);
casNVars = [temp{:}];
lSelectNVars = ismember(cellstr(M_.endo_names), casNVars);
lSelectN = ismember(cellstr(M_.endo_names), 'N');
if ~isequal(sScenario,'Baseline')
sVersion = ['Sectors' num2str(inbsectors_p) 'Regions' num2str(inbregions_p)];
oo_.exo_simul(:,lSelectProdShocks) = structScenarioResults.(sVersion).Baseline.oo_.exo_simul(:,lSelectProdShocks);
oo_.exo_simul(:,lSelectProdShocksN) = structScenarioResults.(sVersion).Baseline.oo_.exo_simul(:,lSelectProdShocksN);
end
oo_.endo_simul_start = oo_.endo_simul;
oo_.exo_simul_start = oo_.exo_simul;
exo_temp = zeros(size(oo_.exo_simul));
for icostep = 1:iStep
disp('=============================================')
disp(['=== Step ' num2str(icostep) ' of ' num2str(iStep) ' for ' sScenario ' ==='])
iTermination_p = iminTermination_p + floor(icostep*(imaxTermination_p-iminTermination_p)/iStep);
if isequal(sScenario, 'Baseline')
exo_temp = oo_.exo_simul_start .* ([(0:iTermination_p)'; repmat(iTermination_p, size(oo_.exo_simul_start,1)-(1+iTermination_p),1)]./iTermination_p).^(1./2) .* (icostep./iStep).^(2./3);
oo_.exo_simul(:,lSelectProdShocks | lSelectProdShocksN) = exo_temp(:,lSelectProdShocks | lSelectProdShocksN);
else
exo_temp = oo_.exo_simul_start .* (icostep./iStep);
oo_.exo_simul = exo_temp;
end
if icostep == 1
oo_.endo_simul(:, 2:end) = repmat(DGE_CRED_Model_steadystate(oo_.endo_simul(:, 1), oo_.exo_simul(end,:)),1, size(oo_.endo_simul,2)-1);
else
oo_.endo_simul(:, (iTermination_p+1):end) = repmat(DGE_CRED_Model_steadystate(oo_.endo_simul(:, end), oo_.exo_simul(end,:)),1, size(oo_.endo_simul,2)-iTermination_p);
end
oo_.exo_steady_state = oo_.exo_simul(end,:)';
oo_.steady_state = oo_.endo_simul(:,end);
if icostep == iStep
steady;
oo_.dr.eigval = check(M_,options_,oo_);
end
tic;
perfect_foresight_solver;
toc;
disp('=============================================')
end
if isequal(sScenario, 'Baseline')
imaxiter = 100;
icoiter = 1;
iInitGrowthRates = M_.params(lSelectInitGrowthParams);
iInitGrowthRatesN = M_.params(lSelectInitGrowthParamsN);
rhogrowthrates = fsolve(@(x) ((iInitGrowthRates-1)~=0) .* (log(oo_.endo_simul(lSelectProdVars,end)./oo_.endo_simul(lSelectProdVars,1)) - sum(log(1 + (iInitGrowthRates-1) .* x.^(0:(iTermination_p-1))),2)) + ((iInitGrowthRates-1)==0).*(x-0), 0.5.*ones(inbsectors_p.*inbregions_p,1),[]);
rhogrowthratesN = fsolve(@(x) ((iInitGrowthRatesN-1)~=0) .* (log((oo_.endo_simul(lSelectNVars,end)./oo_.endo_simul(lSelectN,end))./(oo_.endo_simul(lSelectNVars,1)./oo_.endo_simul(lSelectN,end))) - sum(log(1 + (iInitGrowthRatesN-1) .* x.^(0:(iTermination_p-1))),2)) + ((iInitGrowthRatesN-1)==0).*(x-0), 0.5.*ones(inbsectors_p.*inbregions_p,1),[]);
iaTargetGrowthRates = 1 + (iInitGrowthRates-1).*rhogrowthrates.^(0:(iTermination_p-1));
iaTargetGrowthRatesN = 1 + (iInitGrowthRatesN-1).*rhogrowthratesN.^(0:(iTermination_p-1));
fvalY_vec = iaTargetGrowthRates-oo_.endo_simul(lSelectProdVars,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag))./oo_.endo_simul(lSelectProdVars,(1+M_.maximum_lag-1):(iTermination_p+M_.maximum_lag-1));
fvalN_vec = iaTargetGrowthRatesN-(oo_.endo_simul(lSelectNVars,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag))./oo_.endo_simul(lSelectN,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag)))./(oo_.endo_simul(lSelectNVars,(1+M_.maximum_lag-1):(iTermination_p+M_.maximum_lag-1))./oo_.endo_simul(lSelectN,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag)));
fval_vec = [fvalY_vec fvalN_vec];
while icoiter < imaxiter && max(abs(fval_vec(:))) > 1e-3
disp('=============================================')
disp(['=== Step ' num2str(icoiter) ' of ' num2str(imaxiter) ' to find persistency parameters for ' sScenario ' ==='])
disp(['maximum deviation ' num2str(max(abs(fval_vec(:))), '%.4f')])      
tic;
perfect_foresight_solver;
toc;
icoiter = icoiter + 1;
fvalY_vec = iaTargetGrowthRates-oo_.endo_simul(lSelectProdVars,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag))./oo_.endo_simul(lSelectProdVars,(1+M_.maximum_lag-1):(iTermination_p+M_.maximum_lag-1));
fvalN_vec = iaTargetGrowthRatesN-(oo_.endo_simul(lSelectNVars,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag))./oo_.endo_simul(lSelectN,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag)))./(oo_.endo_simul(lSelectNVars,(1+M_.maximum_lag-1):(iTermination_p+M_.maximum_lag-1))./oo_.endo_simul(lSelectN,(1+M_.maximum_lag):(iTermination_p+M_.maximum_lag)));
fval_vec = [fvalY_vec fvalN_vec];
iaDifference = diff(oo_.exo_simul((M_.maximum_lag):(iTermination_p+M_.maximum_lag),lSelectProdShocks));
iaNDifference = diff(oo_.exo_simul((M_.maximum_lag):(iTermination_p+M_.maximum_lag),lSelectProdShocksN));
iaDifference = iaDifference + 1./5.*fvalY_vec';
iaNDifference = iaNDifference - 1./5 .*fvalN_vec';
oo_.exo_simul((1+M_.maximum_lag):(iTermination_p+M_.maximum_lag),lSelectProdShocks)  = cumsum(iaDifference);
oo_.exo_simul((1+M_.maximum_lag):(iTermination_p+M_.maximum_lag),lSelectProdShocksN) = cumsum(iaNDifference);
disp('=============================================')
end
end
lSelectClimateShocks = ismember(cellstr(M_.exo_names), casClimateShocks);
lSelectWindSpeedShocks = ismember(cellstr(M_.exo_names), casWindSpeedShocks);
lSelectProdShocks = ismember(cellstr(M_.exo_names), casProdShocks);
iVarTemp = 0;
perfect_foresight_solver;
iDisplay = 100;
iFrequency = 1;
iStartYear = 2018;
if isoctave()
caResults = [cellstr(M_.endo_names)'; mat2cell(oo_.endo_simul(:,1:iFrequency:iDisplay)', ones(iDisplay,1), ones(M_.endo_nbr,1))];
caYear = cellstr(['Year'; num2str((iStartYear + (1:iFrequency:iDisplay))')]);
caExcelFile = [caYear caResults];
xlswrite(sWorkbookNameOutput, caExcelFile, sScenario)
else
tabvars = array2table(oo_.endo_simul(:,1:iDisplay)');
tabvars.Properties.VariableNames = cellstr(M_.endo_names);
iaYear_vec = iStartYear + ((0:(size(tabvars,1)-1))./iFrequency)';
tabvars.Properties.RowNames = cellstr(num2str(iaYear_vec, '%.2f'));
writetable(tabvars,sWorkbookNameOutput, 'Sheet', sScenario, 'WriteRowNames', true)
end
sVersion = ['Sectors' num2str(inbsectors_p) 'Regions' num2str(inbregions_p)];
structScenarioResults.(sVersion).(sScenario).oo_ = oo_;
structScenarioResults.(sVersion).(sScenario).M_ = M_;
if exist('structScenarioResults.mat', 'file')
save('structScenarioResults.mat', 'structScenarioResults', '-append')
else
save('structScenarioResults.mat', 'structScenarioResults')
end
end
save('DGE_CRED_Model_results.mat', 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save('DGE_CRED_Model_results.mat', 'oo_recursive_', '-append');
end


disp(['Total computing time : ' dynsec2hms(toc(tic0)) ]);
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
diary off
